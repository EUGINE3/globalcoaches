# Generated by Django 4.2.23 on 2025-09-04 00:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                ("week_count", models.IntegerField(default=4)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
            },
        ),
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "module_type",
                    models.CharField(
                        choices=[
                            (
                                "young_theologians",
                                "Module 1: Young Theologians and Gospel Advancing",
                            ),
                            ("missional_leadership", "Module 2: Missional Leadership"),
                            (
                                "sdgs_community",
                                "Module 3: SDGs & Community Transformation",
                            ),
                            (
                                "education_sustainable",
                                "Module 4: Education for Sustainable Development & Global Citizenship",
                            ),
                            (
                                "entrepreneurship",
                                "Module 5: Entrepreneurship and Political Economics",
                            ),
                            (
                                "diplomacy_leadership",
                                "Module 6: Diplomacy & Global Leadership",
                            ),
                            ("climate_warriors", "Module 7: Climate Warriors"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("description", models.TextField()),
                ("learning_objectives", models.TextField()),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="module_images/"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Module",
                "verbose_name_plural": "Modules",
            },
        ),
        migrations.CreateModel(
            name="ProgramLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "level_type",
                    models.CharField(
                        choices=[
                            ("certificate", "Certificate Level"),
                            ("diploma", "Diploma Level"),
                            ("advanced_diploma", "Advanced Diploma Level"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("description", models.TextField()),
                ("duration_months", models.IntegerField()),
                ("credits_required", models.IntegerField()),
                ("prerequisites", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "verbose_name": "Program Level",
                "verbose_name_plural": "Program Levels",
            },
        ),
        migrations.CreateModel(
            name="WeeklyResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("week_number", models.IntegerField()),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("reading", "Reading"),
                            ("assignment", "Assignment"),
                            ("discussion", "Discussion"),
                            ("quiz", "Quiz"),
                        ],
                        max_length=50,
                    ),
                ),
                ("is_required", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weekly_resources",
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "ordering": ["week_number", "order"],
                "unique_together": {("course", "week_number", "order")},
            },
        ),
        migrations.CreateModel(
            name="ProgramModule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "depth_level",
                    models.IntegerField(
                        help_text="Depth level: 1=Foundation, 2=Practice, 3=Leadership"
                    ),
                ),
                ("learning_outcomes", models.TextField()),
                ("assessment_criteria", models.TextField()),
                (
                    "total_credits",
                    models.IntegerField(
                        default=15,
                        help_text="Total credits for this module (e.g., 15 credits = 225 hours)",
                    ),
                ),
                (
                    "total_hours",
                    models.IntegerField(
                        default=225, help_text="Total hours for this module"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="program_levels",
                        to="courses.module",
                    ),
                ),
                (
                    "program_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="courses.programlevel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Program Module",
                "verbose_name_plural": "Program Modules",
                "unique_together": {("program_level", "module")},
            },
        ),
        migrations.AddField(
            model_name="course",
            name="program_module",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="courses",
                to="courses.programmodule",
            ),
        ),
        migrations.CreateModel(
            name="WeekProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "weekly_resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.weeklyresource",
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "weekly_resource")},
            },
        ),
        migrations.CreateModel(
            name="StudentEnrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("suspended", "Suspended"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "enrolled_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "program_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.programlevel",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Student Enrollment",
                "verbose_name_plural": "Student Enrollments",
                "unique_together": {("student", "program_level")},
            },
        ),
        migrations.CreateModel(
            name="ResourceView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("viewed_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "time_spent",
                    models.IntegerField(default=0, help_text="Time spent in seconds"),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "weekly_resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.weeklyresource",
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "weekly_resource")},
            },
        ),
        migrations.CreateModel(
            name="ModuleTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "topic_number",
                    models.IntegerField(help_text="Topic number within the module"),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "learning_objectives",
                    models.TextField(
                        help_text="Specific learning objectives for this topic"
                    ),
                ),
                (
                    "total_credits",
                    models.IntegerField(help_text="Total credits for this topic"),
                ),
                (
                    "total_hours",
                    models.IntegerField(help_text="Total hours for this topic"),
                ),
                (
                    "theory_hours",
                    models.IntegerField(help_text="Theory component hours"),
                ),
                (
                    "practical_hours",
                    models.IntegerField(help_text="Practical component hours"),
                ),
                (
                    "theory_content",
                    models.TextField(
                        help_text="Theory content and classroom activities"
                    ),
                ),
                (
                    "theory_resources",
                    models.TextField(
                        blank=True, help_text="Required readings, case studies, etc."
                    ),
                ),
                (
                    "practical_activities",
                    models.TextField(help_text="Practical activities and exercises"),
                ),
                (
                    "practical_deliverables",
                    models.TextField(help_text="What students need to produce"),
                ),
                (
                    "assessment_criteria",
                    models.TextField(help_text="How this topic will be assessed"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Display order within the module"
                    ),
                ),
                (
                    "program_module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topics",
                        to="courses.programmodule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Module Topic",
                "verbose_name_plural": "Module Topics",
                "ordering": ["program_module", "order", "topic_number"],
                "unique_together": {("program_module", "topic_number")},
            },
        ),
        migrations.CreateModel(
            name="ModuleProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("progress_percentage", models.FloatField(default=0.0)),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                (
                    "program_module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.programmodule",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "program_module")},
            },
        ),
    ]
